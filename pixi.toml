[workspace]
platforms = ["linux-64", "linux-aarch64", "osx-arm64", "osx-64", "win-64"]
name = "numberlink"
description = "NumberLink puzzle environment for Gymnasium"
readme = "README.md"
authors = ["Misagh Soltani <misaghsoltani@gmail.com>"]
license = "MIT"
license-file = "LICENSE"
channels = ["https://prefix.dev/conda-forge", "conda-forge"]
preview = ["pixi-build"]


[tasks]
numberlink = "numberlink"
ci = "pixi run -e dev check && pixi run -e test test-coverage && pixi run -e doc docs-nitpick"

[package]
name = "numberlink"
version = "0.1.1"


[package.build]
backend = { name = "pixi-build-python", version = "*", channels = [
  "https://prefix.dev/pixi-build-backends",
  "https://prefix.dev/conda-forge",
] }
config = { debug-dir = ".build-debug", extra-input-globs = [
  "*.md",
  "README.md",
  "numberlink/py.typed",
] }

[package.host-dependencies]
hatchling = ">=1.27.0,<2"
uv = "*"

[package.build-dependencies]
python = ">=3.10,<3.15"

[environments]
default = { solve-group = "default" }
dev = { features = ["dev", "test", "doc", "build"], solve-group = "default" }
doc = { features = ["doc"] }
test = { features = ["test"], solve-group = "default, doc" }
build = { features = ["build"], solve-group = "default" }
all = { features = ["dev", "build", "test", "doc"], solve-group = "default" }
glibc217 = { features = [
  "glibc217",
  "dev",
  "build",
  "test",
  "doc",
] } #, solve-group = "all" }

# [tool.build-dependencies]
# # hatchling = ">=1.27.0,<2"
# python = ">=3.10,<3.15"

[dependencies]
python = ">=3.10"


[pypi-dependencies]
numberlink = { path = ".", editable = true }
numpy = ">=2.0,<3"
gymnasium = ">=1.0,<2"
pygame = ">=2.0,<3"


[feature.dev.dependencies]
ruff = "*"
pyright = ">=1.1.403,<2"
shellcheck = ">=0.10.0,<0.11"
mypy = ">=1.17.0,<2"
yamllint = ">=1.37.1,<2"

[feature.dev.pypi-dependencies]
types-defusedxml = ">=0.7.0.20250822, <0.8"
types-pytz = ">=2025.2.0.20250809, <2026"
pre-commit = ">=4.3.0, <5"
cffconvert = ">=2.0.0, <3"
imageio = ">=2.37.0, <3"

[feature.dev.tasks]
lint = "ruff check --fix"
ulint = "ruff check --fix --unsafe-fixes"
format = "ruff format"
fix = "ruff check --fix --unsafe-fixes; ruff format"
format-check = "ruff format --check"
pyright = "pyright"
mypy = "mypy numberlink"
typecheck = "pyright && mypy numberlink"
yamllint = "yamllint ."
shellcheck = "[ -d scripts ] && find scripts -type f -name '*.sh' -exec shellcheck {} + || true"
check = "ruff check && ruff format --check && pyright && mypy numberlink && yamllint . && (test ! -d scripts || ! find scripts -type f -name '*.sh' | grep -q . || find scripts -type f -name '*.sh' | xargs shellcheck)"
update-citation = "bash scripts/update_citation.sh"

[feature.test.tasks]
test = "pytest -q"
test-coverage = "pytest --cov=numberlink --cov-report=term-missing --cov-report=xml:coverage.xml -q"
test-slowest = "pytest --durations=10 -q"
tox = "tox -q"
nose2 = "nose2 -v"
coverage-html = "pytest --cov=numberlink --cov-report=html:htmlcov -q"

[feature.test.pypi-dependencies]
pytest = ">=8.4.2, <9"
nose2 = ">=0.15.1, <0.16"
pytest-cov = ">=7.0.0, <8"
tox = ">=4.31.0, <5"
pillow = ">=12.0.0, <13"

[feature.doc.dependencies]
python = ">=3.10,<3.15"
furo = ">=2024.8.6,<2025"
sphinx-copybutton = ">=0.5.2,<0.6"
sphinx-autodoc2 = ">=0.5.0,<0.6"
sphinx-sitemap = ">=2.9.0,<3"
myst-parser = ">=4.0.1,<5"

# [feature.doc.pypi-dependencies]


[feature.doc.tasks]
docs = "sphinx-build -b html docs docs/_build/html"
docs-nitpick = "sphinx-build -nW --keep-going -b html docs docs/_build/html"
docs-clean = "rm -rf docs/_build docs/apidocs"
docs-serve = "python -m http.server --bind 127.0.0.1 --directory docs/_build/html 8000"
docs-run = "rm -rf docs/_build docs/apidocs && sphinx-build -nW --keep-going -b html docs docs/_build/html && python -m http.server --bind 127.0.0.1 --directory docs/_build/html 8000"


[feature.glibc217.system-requirements]
libc = { family = "glibc", version = "2.17" }


[feature.build.dependencies]
hatch = "*"

[feature.build.tasks]
build = "pixi build -o dist && rm -rf .build-debug dist/linux-64 dist/win-64 dist/osx-64 dist/osx-arm64 dist/linux-aarch64 dist/noarch"
build-clean = "pixi build --clean -o dist && rm -rf .build-debug dist/linux-64 dist/win-64 dist/osx-64 dist/osx-arm64 dist/linux-aarch64 dist/noarch"
buildpy = "hatch build -t wheel -t sdist"
buildpy-clean = "hatch build -t wheel -t sdist --clean"
build-all = "pixi build -o dist && rm -rf .build-debug dist/linux-64 dist/win-64 dist/osx-64 dist/osx-arm64 dist/linux-aarch64 dist/noarch && hatch build -t wheel -t sdist"
